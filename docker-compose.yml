version: '3.1'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
    depends_on:
      - zookeeper

  db:
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
      - '5433:5433'
    expose:
      - '5432'
      - '5433'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=test
    volumes:
      - 'postgresql:/var/lib/postgresql'
      - 'postgresql_data:/var/lib/postgresql/data'

  producer:
    build: src/producer/
    ports:
      - '5000:5000'
    command: producer -i data/events.json -d
    depends_on:
      - kafka

  consumer:
    build: src/consumer/
    ports:
      - '5001:5001'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=test
    command: consumer -d
    depends_on:
      - kafka
      - db

  reporter:
    build: src/reporter/
    ports:
      - '5002:5002'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=test
    depends_on:
      - consumer

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql:
  postgresql_data:
